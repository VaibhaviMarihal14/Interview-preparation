Solution for question 1.

def findPair(A, sum):

	dict = {}

	for i, e in enumerate(A):

		if sum - e in dict:
			print("Pair found at index", dict.get(sum - e), "and", i)
			return

		dict[e] = i

	print("Pair not found")

if __name__ == '__main__':

	A = [8, 7, 2, 5, 3, 1]
	sum = 10

	findPair(A, sum)

Output :
pair found at index 0 and 2










Solution for question 2.

def printAllSubLists(A):

	for i in range(len(A)):
		sum = 0
		for j in range(i, len(A))
			sum += A[j]
			if sum == 0:
				print("Sublist", (i, j))


if __name__ == '__main__':

	A = [3, 4, -7, 3, 1, 3, 1, -4, -2, -2]
	printAllSubLists(A)

Output :
Sublist (0, 2)
Sublist (0, 9)
Sublist (1, 3)
Sublist (2, 5)
Sublist (3, 9)
Sublist (5, 7)












Solution for question 3.

def sort(A):

    pivot = 1
    j = 0

    for i in range(len(A)):
        if A[i] < pivot:
            swap(A, i, j)
            j = j + 1

def swap(A, i, j):

    temp = A[i]
    A[i] = A[j]
    A[j] = temp

if __name__ == '__main__':

    A = [0, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    sort(A)

    print(A)

Output :
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1]














Solution for question 4.

def findDuplicate(A):
	visited = [False] * (len(A) + 1)

	for i in range(len(A)):

		if visited[A[i]]:
			return A[i]

		visited[A[i]] = True

	return -1


if __name__ == '__main__':
	A = [1, 2, 3, 4, 4]

	print("Duplicate element is", findDuplicate(A))

Output :
Duplicate element is 4













Solution for question 5.

from random import randrange

def swap(A, i, j):

	temp = A[i]
	A[i] = A[j]
	A[j] = temp

def shuffle(A):
	for i in reversed(range(1, len(A))):
		j = randrange(i + 1)
		swap(A, i, j)


if __name__ == '__main__':

	A = [1, 2, 3, 4, 5, 6]

	shuffle(A)

	print(A)

Output :
[2, 4, 1, 5, 3, 6]
