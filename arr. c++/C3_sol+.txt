Solution for question 1.

#include <bits/stdc++.h> 
using namespace std; 

void leftRotatebyOne(int arr[], int n) 
{ 
	int temp = arr[0], i; 
	for (i = 0; i < n - 1; i++) 
		arr[i] = arr[i + 1]; 

	arr[i] = temp; 
} 
void leftRotate(int arr[], int d, int n) 
{ 
	for (int i = 0; i < d; i++) 
		leftRotatebyOne(arr, n); 
} 
void printArray(int arr[], int n) 
{ 
	for (int i = 0; i < n; i++) 
		cout << arr[i] << " "; 
} 
int main() 
{ 
	int arr[] = { 1, 2, 3, 4, 5, 6, 7 }; 
	int n = sizeof(arr) / sizeof(arr[0]); 
	leftRotate(arr, 2, n); 
	printArray(arr, n); 

	return 0; 
} 


Output :
3 4 5 6 7 1 2 









Solution for question 2.

#include <bits/stdc++.h> 
using namespace std; 

int getMissingNo(int a[], int n) 
{ 

	int total = (n + 1) * (n + 2) / 2; 
	for (int i = 0; i < n; i++) 
		total -= a[i]; 
	return total; 
} 
int main() 
{ 
	int arr[] = { 1, 2, 4, 5, 6 }; 
	int n = sizeof(arr) / sizeof(arr[0]); 
	int miss = getMissingNo(arr, n); 
	cout << miss; 
} 

Output :

3