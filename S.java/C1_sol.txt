Solution for question 1.

import java.util.HashMap;
import java.util.Map;

class Main
{
	public static void findPair(int[] A, int sum)
	{
		Map<Integer, Integer> map = new HashMap<>();

		for (int i = 0; i < A.length; i++)
		{
			if (map.containsKey(sum - A[i]))
			{
				System.out.println("Pair found at index " +map.get(sum - A[i]) + " and " + i);
				return;
			}
			map.put(A[i], i);
		}
		System.out.println("Pair not found");
	}
	public static void main (String[] args)
	{
		int[] A = { 8, 7, 2, 5, 3, 1 };
		int sum = 10;

		findPair(A, sum);
	}
}

Output :
pair found at index 0 and 2









Solution for question 2.

class Main
{
	public static void printallSubarrays(int[] A)
	{
		for (int i = 0; i < A.length; i++)
		{
			int sum = 0;

			for (int j = i; j < A.length; j++)
			{
				sum += A[j];
				if (sum == 0) {
					System.out.println("Subarray [" + i + ".." + j + "]");
				}
			}
		}
	}

		public static void main (String[] args)
	{
		int[] A = { 3, 4, -7, 3, 1, 3, 1, -4, -2, -2 };

		printallSubarrays(A);
	}
}

Output :

Subarray [0..2]
Subarray [0..9]
Subarray [1..3]
Subarray [2..5]
Subarray [3..9]
Subarray [5..7]













Solution for question 3.

import java.util.Arrays;

class Main{
	public static void sort(int[] A){
		int pivot = 1;
		int j = 0;

		for (int i = 0; i < A.length; i++)	{
			if (A[i] < pivot)	{
				swap(A, i, j);
				j++; }
		}
	}
	private static void swap(int[] A, int i, int j) {
		int temp = A[i];
		A[i] = A[j];
		A[j] = temp;
	}

	public static void main (String[] args)	{
		int[] A = { 0, 0, 1, 0, 1, 1, 0, 1, 0, 0 };

		sort(A);

		System.out.println(Arrays.toString(A));
	}
}

Output :
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1]














Solution for question 4.

class Main
{
	public static int findDuplicate(int[] A)
	{
		boolean visited[] = new boolean[A.length + 1];

		for (int value : A) {
			if (visited[value]) {
				return value;
			}

			visited[value] = true;
		}
		return -1;
	}

	public static void main (String[] args)
	{
		int[] A = { 1, 2, 3, 4, 4 };

		System.out.println("Duplicate element is " + findDuplicate(A));
	}
}


Output :
Duplicate element is 4














Solution for question 5.

import java.util.Arrays;
import java.util.Random;

class Main
{
	private static void swap(int[] A, int i, int j) {
		int temp = A[i];
		A[i] = A[j];
		A[j] = temp;
	}

	public static void shuffle(int[] A)
	{
		for (int i = A.length - 1; i >= 1; i--)
		{
			Random rand = new Random();

			int j = rand.nextInt(i + 1);

			swap(A, i, j);
		}
	}

	public static void main (String[] args)
	{
		int[] A = { 1, 2, 3, 4, 5, 6 };

		shuffle(A);

		System.out.println(Arrays.toString(A));
	}
}

Output :
[2, 4, 1, 5, 3, 6]