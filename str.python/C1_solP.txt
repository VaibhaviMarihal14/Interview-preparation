Solution for question 1.

NO_OF_CHARS = 256

def fillCharCounts(string, count): 
	for i in string: 
		count[ord(i)] += 1
	return count 

def printDups(string): 
	count = [0] * NO_OF_CHARS 
	count = fillCharCounts(string,count) 

	k = 0

	for i in count: 
		if int(i) > 1: 
			print chr(k) + ", count = " + str(i) 
		k += 1

string = "test string"
print printDups(string) 

Output :
s,  count = 2
t,  count = 3











Solution for question 2.

def isPalindrome(s): 
	return s == s[::-1] 
 
s = "malayalam"
ans = isPalindrome(s) 

if ans: 
	print("Yes") 
else: 
	print("No") 


Output :
Yes










Solution for question 3.

def consecutive(string): 
	print(string[0], end = "") 

	for i in range(1, len(string)): 
		if (ord(string[i]) == ord(string[i - 1]) + 1 or
			ord(string[i]) == ord(string[i - 1]) - 1): 
			print(string[i], end = "") 
		else: 
			print() 
			print(string[i], end = "") 


string = "ABCXYZACCD"
consecutive(string) 

Output:

ABC
XYZ
A
C
CD










Solution for question 4.

 
string1 = input("Enter the first string: ") 
print(string1, end = "\n") 
 
string2 = input("Enter the second string: ") 
print(string2, end ="\n") 

print("Are both strings same: ", end = " ") 

if (string1 == string2) : 
	print("Yes") 
		
else : 
	print("No") 









Solution for question 5.

 
def isSubstring(s1, s2): 
	M = len(s1) 
	N = len(s2) 

	for i in range(N - M + 1): 

		for j in range(M): 
			if (s2[i + j] != s1[j]): 
				break
			
		if j + 1 == M : 
			return i 

	return -1

s1 = "for"
s2 = "goodforyou"
res = isSubstring(s1, s2) 
if res == -1 : 
	print("Not present") 
else: 
	print("Present at index " + str(res)) 


Output:
Present at index 4